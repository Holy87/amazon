/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package amazon;

import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;

/**
 * Questa classe viene utilizzata per creare sottoclassi di modifica dei
 * record di una tabella.
 * @author Francesco
 */
public abstract class EditForm extends javax.swing.JDialog {
    protected final int EDIT = 1;   //modalità di modifica
    protected final int ADDN = 2;   //modalità di aggiunta
    protected int mode;             //memorizza la modalità selezionata
    protected List dati;            //lista delle colonne del record
    protected TabOggetti scheda;    //scheda da aggiornare alla modifica

    /**
     * Creates new form EditForm
     * @param parent
     * @param modal
     */
    public EditForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setVisible(false);
        //initComponents();
    }
    
    public EditForm(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        setVisible(false);
    }
    
    /**
     * Apre la finestra impostando i dati
     * @param mode      modalità di apertura (ADDN o EDIT)
     * @param dati      lista ordinata delle colonne del record
     * @param scheda    la scheda da aggiornare alla chiusura
     */
    public void show(int mode, List dati, TabOggetti scheda)
    {
        this.scheda = scheda;
        this.mode = mode;
        if (mode == EDIT)
        {
            setTitle(titoloModifica());
            this.dati = dati;
            fillContents();
        }
        else if (mode == ADDN)
        {
            setTitle(titoloNuovo());
            this.dati = null;
            cleanContents();
        }
        setVisible(true);
    }
    
    protected void mostraErrore(SQLException ex) {
        String errore = "Errore di connessione al database";
        errore += "\nCodice: " + ex.getErrorCode();
        errore += "\nMessaggio: " + ex.getMessage();
        errore += "\n\n" + ex.getSQLState();
        JOptionPane.showMessageDialog(this, "Errore: " + errore, null, ERROR_MESSAGE);
    }
    
    /**
     * Metodo astratto da implementare nelle sottoclassi. Viene chiamato quando
     * la finestra viene aperta in modalità modifica e si occupa di riempire
     * le caselle di testo con i dati del record.
     */
    protected abstract void fillContents();
    
    /**
     * Metodo astratto da implementare nelle sottoclassi. Viene chiamato quando
     * la finestra viene aperta in modalità aggiunta e si occupa di impostare
     * le caselle di testo vuote.
     */
    protected abstract void cleanContents();
    
    /**
     * Chiusura della finestra. L'utilità del metodo è l'aggiornamento
     * automatico della tabella nella scheda chiamante.
     */
    protected void chiudiFinestra() {
        setVisible(false);
        if (scheda != null) {
            scheda.aggiornaTabellaConQuery();
        }
        dispose();
    }
    
    // Titoli della finestra in modifica e aggiunta
    protected abstract String titoloNuovo();
    protected abstract String titoloModifica();
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);

        jButton1.setText("Annulla");

        jButton2.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(410, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(404, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
